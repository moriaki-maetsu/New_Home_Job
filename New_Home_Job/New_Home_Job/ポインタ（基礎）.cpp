#include<stdio.h>



int main(void)
{

	/*【ポインタを宣言する】
	変数aのアドレスを格納するポインタ変数paを宣言して変数aのアドレスを格納してください。
																						*/

	int a = 0;
	int* pa = &a;
	
	/*【アドレス演算子・関節参照演算子の問題】
	①変数aのアドレスを出力する。
	②ポインタpaに格納されているアドレスを出力する。
	③ポインタpaに格納されているアドレス先の中身（値）を出力する。
	④ポインタpaを利用して格納されているアドレス先の中身（値）を10に書き換える。
																						*/
	printf("変数aのアドレスは%pです。\n", &a);
	printf("ポインタpaのアドレスは%pです。\n", pa);
	printf("ポインタpaの値は%dです。\n", *pa);
	printf("ポインタを使って変数aの値を10に変更しました。\n");
	
	*pa = 10;
	
	printf("変数aの値は%dです。\n",a);
	printf("\n");

	int num[5] = { 10,20,30,40,50 };
	int* pnum = num;

	/*【配列とポインタの問題】
	①配列numのアドレスを出力する。（配列名を利用すること）
	②ポインタpnumのアドレスを出力する。
	③配列numの０番目の値を出力する。
	④配列numの値を出力する。（配列名を利用すること）
	⑤ポインタpnumに格納されているアドレス先の中身を出力する。
																						*/
	printf("配列numのアドレスは%pです。\n", num);
	printf("ポインタpnumのアドレスは%pです。\n", pnum);
	printf("配列num[0]の値は%dです。\n", num[0]);
	printf("配列numの値は%dです。\n", *num);
	printf("ポインタ変数pnumの値は%dです。\n", *pnum);
	printf("\n");

	/*【ポインタ演算の問題】
	①配列numの先頭要素から１つ先のアドレスを出力する。（ポインタ演算を行うこと）
	②配列numの先頭要素から１つ先の要素の中身を出力する。（ポインタ演算を行うこと）
	③ポインタpnumをインクリメントする。
	④ポインタpnumに格納されているアドレスを出力する。
	⑤ポインタpnumに格納されているアドレス先の中身を出力する。
	
																						*/
	printf("num+1した先のアドレスは%pです。\n", num + 1);
	printf("num+1した先の値は%dです。\n", *(num + 1));
	printf("\n");

	
	printf("ポインタ変数pnumをインクリメントしました。\n");
	pnum++;
	
	printf("ポインタ変数pnumのアドレスは%pです。\n", pnum);
	printf("ポインタ変数pnumの値は%dです。\n", *pnum);

	return 0;
}